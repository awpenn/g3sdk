from dataload_functions import *
import pandas as pd
import json
from requests.auth import AuthBase
import requests

from settings import APIURL, HEADERS

"""stubbing out how user information will be gatherd to build user.yaml file for gen3 user management"""

"""step one is define all the resources in datastage"""
def get_datasets():
    """user method in loadscript to get list of datasets, ultimately resulting in...
        dataset_data = response.json()
    """
    datasets_and_consents = []

    for dataset in dataset_data:
        accession_no = dataset["accession"]

        for version in dataset["datasetVersions"]:
            if version["active"] == 1:
                dss_dataset_id = version["id"]
        
        version_consents = getConsents(dss_dataset_id)

        datasets_and_consents.append( [accession_no, version_consents] )

    return [datasets_and_consents]

"""this function will take the nested list returned from get_datasets and use it to build the json or yaml blocks that make up the resources section of the user.yaml file"""
def build_blocks(dc): """dc = calling the get_datasets function"""
    for dataset in dc:
        program_name = dataset[0]
        projects = dataset[1]

        """make a resource object in the resource section along the lines of `- name: program_name`"""
        if len(projects) > 0:
            """add `subresources` block"""
            for project in projects:
                project_name = program_name + "_" + project
                """add to subresources `-{name: project_name}"""




"""user info section"""
"""currently, api doesn't support getting a list of users, and if we have users with no applications (?) then no need to add them anyway"""

"""for right now( 1/14), querying any users applications just returns all the applications, so..."""


def get_active_users():
    subroute = 'users/2/applications'
    requrl = APIURL + subroute
    response = requests.get(requrl, headers=HEADERS)
    response_data = response.json()['data']

    active_users = set()
    for app in response_data:
        user = app['user']['id']
        active_users.add(user)
    
    return active_users

"""returns a set of user ids with applications"""

"""use the userID list generated by get_active_users to get username needed, """ 